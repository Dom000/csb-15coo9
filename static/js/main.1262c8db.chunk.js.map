{"version":3,"sources":["App.js","index.js"],"names":["Model","url","useLoader","GLTFLoader","draco","nodes","materials","rotation","Math","PI","position","scale","castShadow","receiveShadow","geometry","planet001","material","scene","planet002","Loading","useState","finished","set","width","setWidth","useEffect","THREE","onLoad","onProgress","itemsLoaded","itemsTotal","useTransition","from","opacity","leave","update","map","item","key","props","div","className","style","App","shadowMap","camera","intensity","angle","penumbra","shadow-mapSize-width","shadow-mapSize-height","shadow-bias","attach","args","fallback","autoRotate","enablePan","enableZoom","enableDamping","dampingFactor","rotateSpeed","maxPolarAngle","minPolarAngle","href","children","ReactDOM","render","document","getElementById"],"mappings":"oPAOA,SAASA,EAAT,GAAyB,IAARC,EAAO,EAAPA,IAAO,EACOC,YAAUC,IAAYF,EAAKG,eAAhDC,EADc,EACdA,MAAOC,EADO,EACPA,UACf,OACE,2BAAOC,SAAU,EAAEC,KAAKC,GAAK,EAAG,EAAG,GAAIC,SAAU,CAAC,GAAI,EAAG,GAAIC,MAAO,CAAC,EAAG,EAAG,IACzE,2BAAOJ,SAAU,CAACC,KAAKC,GAAK,MAAOD,KAAKC,GAAK,IAAKD,KAAKC,GAAK,MAC1D,0BAAMG,YAAU,EAACC,eAAa,EAACC,SAAUT,EAAMU,UAAUD,SAAUE,SAAUV,EAAUW,QACvF,0BAAML,YAAU,EAACC,eAAa,EAACC,SAAUT,EAAMa,UAAUJ,SAAUE,SAAUV,EAAUW,UAM/F,SAASE,IAAW,IAAD,EACOC,oBAAS,GADhB,mBACVC,EADU,KACAC,EADA,OAESF,mBAAS,GAFlB,mBAEVG,EAFU,KAEHC,EAFG,KAgBjB,OAZAC,qBAAU,WACRC,wBAA4BC,OAAS,kBAAML,GAAI,IAC/CI,wBAA4BE,WAAa,SAAC3B,EAAK4B,EAAaC,GAAnB,OACvCN,EAAUK,EAAcC,EAAc,QACvC,IAEWC,YAAcV,EAAU,KAAM,CAC1CW,KAAM,CAAEC,QAAS,EAAGV,MAAO,GAC3BW,MAAO,CAAED,QAAS,GAClBE,OAAQ,CAAEZ,WAGCa,KACX,gBAASf,EAAT,EAAGgB,KAAgBC,EAAnB,EAAmBA,IAAnB,IAAwBC,MAASN,EAAjC,EAAiCA,QAASV,EAA1C,EAA0CA,MAA1C,OACGF,GACC,kBAAC,IAAEmB,IAAH,CAAOC,UAAU,UAAUH,IAAKA,EAAKI,MAAO,CAAET,YAC5C,yBAAKQ,UAAU,yBACb,kBAAC,IAAED,IAAH,CAAOC,UAAU,cAAcC,MAAO,CAAEnB,gBAOrC,SAASoB,IACtB,OACE,oCACE,yBAAKF,UAAU,OACf,oCAEE,6BACA,0CAEF,kBAAC,IAAD,CAAQG,WAAS,EAACC,OAAQ,CAAEnC,SAAU,CAAC,EAAG,EAAG,MAC3C,kCAAcoC,UAAW,MACzB,gCAAYA,UAAW,EAAGpC,SAAU,EAAE,IAAK,IAAK,MAChD,+BACEE,YAAU,EACVkC,UAAW,KACXC,MAAO,GACPC,SAAU,EACVtC,SAAU,CAAC,GAAI,GAAI,IACnBuC,uBAAsB,KACtBC,wBAAuB,KACvBC,eAAc,OAEhB,yBAAKC,OAAO,MAAMC,KAAM,CAAC,UAAW,GAAI,MACxC,kBAAC,WAAD,CAAUC,SAAU,MAClB,kBAACtD,EAAD,CAAOC,IAAI,uBAEb,kBAAC,IAAD,CACEsD,YAAU,EACVC,WAAW,EACXC,YAAY,EACZC,eAAa,EACbC,cAAe,GACfC,YAAa,EACbC,cAAerD,KAAKC,GAAK,EACzBqD,cAAetD,KAAKC,GAAK,KAG7B,yBAAKgC,UAAU,UACf,kBAACtB,EAAD,MACA,uBAAG4C,KAAK,2CAA2CtB,UAAU,WAAWuB,SAAS,WACjF,uBAAGD,KAAK,6BAA6BtB,UAAU,YAAYuB,SAAS,YACpE,uBAAGD,KAAK,8CAA8CtB,UAAU,cAAcuB,SAAS,yB,MCnF7FC,IAASC,OAAO,kBAACvB,EAAD,MAASwB,SAASC,eAAe,W","file":"static/js/main.1262c8db.chunk.js","sourcesContent":["import * as THREE from 'three'\nimport React, { Suspense, useState, useEffect } from 'react'\nimport { Canvas, useLoader } from 'react-three-fiber'\nimport { useTransition, a } from 'react-spring'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader'\nimport { OrbitControls, draco } from 'drei'\n\nfunction Model({ url }) {\n  const { nodes, materials } = useLoader(GLTFLoader, url, draco())\n  return (\n    <group rotation={[-Math.PI / 2, 0, 0]} position={[0, -7, 0]} scale={[7, 7, 7]}>\n      <group rotation={[Math.PI / 13.5, -Math.PI / 5.8, Math.PI / 5.6]}>\n        <mesh castShadow receiveShadow geometry={nodes.planet001.geometry} material={materials.scene} />\n        <mesh castShadow receiveShadow geometry={nodes.planet002.geometry} material={materials.scene} />\n      </group>\n    </group>\n  )\n}\n\nfunction Loading() {\n  const [finished, set] = useState(false)\n  const [width, setWidth] = useState(0)\n\n  useEffect(() => {\n    THREE.DefaultLoadingManager.onLoad = () => set(true)\n    THREE.DefaultLoadingManager.onProgress = (url, itemsLoaded, itemsTotal) =>\n      setWidth((itemsLoaded / itemsTotal) * 200)\n  }, [])\n\n  const props = useTransition(finished, null, {\n    from: { opacity: 1, width: 0 },\n    leave: { opacity: 0 },\n    update: { width },\n  })\n\n  return props.map(\n    ({ item: finished, key, props: { opacity, width } }) =>\n      !finished && (\n        <a.div className=\"loading\" key={key} style={{ opacity }}>\n          <div className=\"loading-bar-container\">\n            <a.div className=\"loading-bar\" style={{ width }} />\n          </div>\n        </a.div>\n      ),\n  )\n}\n\nexport default function App() {\n  return (\n    <>\n      <div className=\"bg\" />\n      <h1>\n        LEARN\n        <br />\n        <span>w/JASON</span>\n      </h1>\n      <Canvas shadowMap camera={{ position: [0, 0, 15] }}>\n        <ambientLight intensity={0.75} />\n        <pointLight intensity={1} position={[-10, -25, -10]} />\n        <spotLight\n          castShadow\n          intensity={2.25}\n          angle={0.2}\n          penumbra={1}\n          position={[25, 25, 25]}\n          shadow-mapSize-width={1024}\n          shadow-mapSize-height={1024}\n          shadow-bias={-0.0001}\n        />\n        <fog attach=\"fog\" args={['#cc7b32', 16, 20]} />\n        <Suspense fallback={null}>\n          <Model url=\"/scene-draco.gltf\" />\n        </Suspense>\n        <OrbitControls\n          autoRotate\n          enablePan={false}\n          enableZoom={false}\n          enableDamping\n          dampingFactor={0.5}\n          rotateSpeed={1}\n          maxPolarAngle={Math.PI / 2}\n          minPolarAngle={Math.PI / 2}\n        />\n      </Canvas>\n      <div className=\"layer\" />\n      <Loading />\n      <a href=\"https://github.com/drcmda/learnwithjason\" className=\"top-left\" children=\"Github\" />\n      <a href=\"https://twitter.com/0xca0a\" className=\"top-right\" children=\"Twitter\" />\n      <a href=\"https://github.com/drcmda/react-three-fiber\" className=\"bottom-left\" children=\"+ react-three-fiber\" />\n    </>\n  )\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './styles.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}